# Task ID: 3
# Title: Backend PostHog Analytics Service
# Status: pending
# Dependencies: 1
# Priority: medium
# Description: Create a backend service module to retrieve analytics data from PostHog API with caching and error handling
# Details:
1. Create lib/eventasaurus_app/services/posthog_service.ex:
```elixir
defmodule EventasaurusApp.Services.PosthogService do
  @api_base "https://eu.i.posthog.com/api"
  
  def get_event_analytics(event_id, date_range \\ 7) do
    with {:ok, response} <- fetch_insights(event_id, date_range) do
      parse_analytics_data(response)
    end
  end
  
  defp fetch_insights(event_id, date_range) do
    # Implement PostHog API calls for event-specific metrics
  end
end
```
2. Implement API calls to fetch:
   - Unique page visitors for event
   - Registration conversion rates
   - Date poll engagement metrics
   - Ticket conversion rates
3. Add GenServer-based caching to prevent excessive API calls (5-minute cache)
4. Include proper error handling and fallback values
5. Add HTTP client configuration for PostHog API authentication

# Test Strategy:
Unit test the service with mock PostHog API responses, test caching behavior, verify error handling with invalid API responses, test rate limiting and API key authentication
