# PostHog Basic Event Analytics Integration PRD

## Overview
Integrate PostHog analytics to track basic user interactions on public events, providing event organizers with essential insights about their event engagement.

## Project Context
- **Backend**: Phoenix/Elixir with LiveView
- **Frontend**: Alpine.js + TailwindCSS  
- **Database**: PostgreSQL + Supabase
- **Current State**: Basic insights showing registration count, tickets sold, revenue
- **Target**: Add PostHog tracking for public event interactions

## Core Requirements

### 1. PostHog Foundation Setup
- Add PostHog JavaScript SDK to the application
- Configure environment variables (POSTHOG_API_KEY, api_url: "https://eu.i.posthog.com")
- Initialize PostHog in the main application layout
- Ensure proper user identification for anonymous and authenticated users

### 2. Public Event Page Tracking
Track essential user interactions on public event pages:
- **Event page views**: Unique visitors viewing event details
- **Event registrations**: Users completing event registration
- **Date voting**: Users voting on event date options (polling feature)
- **Ticket purchases**: Users successfully purchasing tickets

### 3. Enhanced Event Insights Dashboard
Extend the existing insights tab in event management to display:
- **Unique page visitors**: Total unique visitors to the event page
- **Registration conversion**: Views to registration conversion rate
- **Date poll engagement**: Number of users participating in date voting
- **Ticket conversion**: Views to ticket purchase conversion rate (for ticketed events)

### 4. Backend Analytics Service
- Create PostHog service module for retrieving analytics data
- Implement API calls to fetch event-specific metrics
- Add caching to prevent excessive API calls
- Integrate analytics data into existing event management LiveView

### 5. Frontend Integration
- Add PostHog tracking calls to public event pages
- Update event insights dashboard with new analytics cards
- Ensure tracking works for both authenticated and anonymous users
- Add loading states for analytics data

## Technical Implementation Details

### Key Events to Track
```javascript
// Public event page view
posthog.capture('event_page_viewed', {
  event_id: event.id,
  event_title: event.title,
  is_ticketed: event.is_ticketed
});

// User registration
posthog.capture('event_registration_completed', {
  event_id: event.id,
  user_type: user.supabase_id ? 'authenticated' : 'anonymous'
});

// Date voting
posthog.capture('date_vote_submitted', {
  event_id: event.id,
  selected_date: vote.date
});

// Ticket purchase
posthog.capture('ticket_purchased', {
  event_id: event.id,
  ticket_count: order.ticket_count,
  total_amount: order.total_amount
});
```

### Files to Modify
- `/assets/js/app.js` - PostHog SDK initialization
- `/lib/eventasaurus_web/components/layouts/root.html.heex` - Script inclusion
- `/lib/eventasaurus_web/live/public_event_live.ex` - Public event tracking
- `/lib/eventasaurus_web/live/event_manage_live.ex` - Analytics dashboard
- `/lib/eventasaurus_app/services/posthog_service.ex` - New analytics service
- `/config/runtime.exs` - Environment configuration

### Current Insights Location
Enhance existing insights at `event_manage_live.html.heex:482-547` by adding:
- Unique visitors card
- Conversion metrics card  
- Engagement summary card

## Success Criteria
- PostHog successfully tracks public event interactions
- Event organizers can see unique visitor counts for their events
- Registration and ticket purchase conversion rates are visible
- Date voting participation metrics are tracked
- Analytics load within 2 seconds in the insights dashboard
- No impact on page load performance for public users

## Constraints
- Start with basic tracking only (no session recording, feature flags, etc.)
- Focus on public event interactions (not organizer dashboard analytics)
- Use existing UI patterns for insights dashboard
- Maintain user privacy (anonymous tracking for non-authenticated users)
- API key configured as POSTHOG_API_KEY environment variable
- Use PostHog EU instance: "https://eu.i.posthog.com"

## Out of Scope (Future Phases)
- Advanced analytics (cohort analysis, retention, etc.)
- Session recordings
- Feature flags and A/B testing
- Funnel analysis beyond basic conversion rates
- Real-time analytics
- Geographic analysis
- Device/browser analytics

## Estimated Effort
5 focused tasks covering setup, tracking implementation, backend service, and dashboard integration. 